package org.vferrer.sparkker.kie.rules

import org.vferrer.sparkker.stokker.AnalizedStockQuotation;
import org.vferrer.sparkker.service.facts.TradingSession;
import org.vferrer.sparkker.service.facts.StockRuleData;

//global TradingSession session;

/* If a stock price is over the yearly moving average (200 sessions)
*  is probably following an upward trend
*/
rule "SMABuy" 
dialect "java"	
when
	$stockData : AnalizedStockQuotation()
    $price : Double() from  $stockData.value
    $sma200d : Double() from  $stockData.getIndicator("SMA").value
    eval($price > $sma200d);
then
	$stockData.getIndicator("SCORE").increaseValue(1d);
end

/* If a stock price creating new yearly highs probably it will
*  have momentum to create more
*/
rule "MAX" 
dialect "java"	
when
	$stockData : AnalizedStockQuotation()
    $price : Double() from  $stockData.value
    $max : Double() from  $stockData.getIndicator("MAX").value	
    eval($price >= $max * 0.97d);
then
	$stockData.getIndicator("SCORE").increaseValue(1d);
end

/* If a stock price is under the yearly moving average (200 sessions)
*  is probably following a downward trend
*/
rule "SMASell" 
dialect "java"	
when

	$stockData : AnalizedStockQuotation()
    $price : Double() from  $stockData.value
    $sma200d : Double() from  $stockData.getIndicator("SMA").value
    eval($price < $sma200d);
then
	$stockData.getIndicator("SCORE").increaseValue(-1d);
end

/* If a stock price creating new yearly minimums probably it will
*  have momentum to create more
*/
rule "MIN" 
dialect "java"	
when
	$stockData : AnalizedStockQuotation()
    $price : Double() from  $stockData.value
    $min : Double() from  $stockData.getIndicator("MIN").value
    eval($price <= ($min * 1.03d))
then
	$stockData.getIndicator("SCORE").increaseValue(-1d);
end

rule "BUY_RULE"
dialect "java"
salience -49
when
	$stockData  : AnalizedStockQuotation()
	$session    : TradingSession(isOnMarket() == false)
		
	$todayScore : Double () from $stockData.getIndicator("SCORE").value
	$sma200d    : Double() from  $stockData.getIndicator("SMA").value	
	
	// Buy if score is positive and distance to SMA < 5%
	eval($todayScore > 0 && (($stockData.getValue() / $sma200d) < 1.05d))
then
    modify( $session ) { addOperation("BUY",$stockData.getTimestamp(),$stockData.getValue(),$todayScore) };
end


rule "SELL_RULE_STOP"
salience -50
dialect "java"
when
	$stockData : AnalizedStockQuotation()
	$session : TradingSession($session.isOnMarket() == true)
	
	$todayScore : Double () from $stockData.getIndicator("SCORE").value
	$opening    : Double() from  $session.getOpeningPrice()
	
	// Sell if score is negative or distance to opening > 15%	
	eval($todayScore < 0d  || (($stockData.getValue() / $opening) > 1.15d))
then
	modify( $session ) { addOperation("SELL",$stockData.getTimestamp(),$stockData.getValue(),$todayScore) };
end

rule "CLEAN_RULE"
salience -100
dialect "java"
when
	$stockData : AnalizedStockQuotation()
	
	eval(true)
then
	retract($stockData);
end

